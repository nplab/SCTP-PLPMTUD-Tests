--tolerance_usecs=100000
--ip_version=ipv4
--mtu=1500

 0.0 `sysctl -i net.inet.sctp.initial_cwnd=10`
 0.0 `sysctl -i net.inet.sctp.plpmtud_enable=1`
 0.0 `sysctl -i net.inet.sctp.plpmtud_ipv4_min_mtu=576`
 0.0 `sysctl -i net.inet.sctp.plpmtud_search_algorithm=2` // OptBinary
 0.0 `sysctl -i net.inet.sctp.plpmtud_use_ptb=1`
 0.0 `sysctl -i net.inet.tcp.hostcache.purgenow=1`

// Create a non-blocking 1-to-1 style socket
+0.0 socket(..., SOCK_STREAM, IPPROTO_SCTP) = 3
+0.0 fcntl(3, F_SETFL, O_RDWR | O_NONBLOCK) = 0
+0.0 connect(3, ..., ...) = -1 EINPROGRESS (Operation now in progress)

// Trigger the active associtation setup
+0.0 > sctp: INIT[flgs=0, tag=1, a_rwnd=..., os=..., is=..., tsn=1, ...]
+0.1 < sctp: INIT_ACK[flgs=0, tag=2, a_rwnd=99999, os=1, is=1, tsn=1, STATE_COOKIE[len=4, val=...]]
+0.0 > sctp: COOKIE_ECHO[flgs=0, len=..., val=...]
+0.1 < sctp: COOKIE_ACK[flgs=0]

// Check if the setup was sucessful
+0.0 getsockopt(3, SOL_SOCKET, SO_ERROR, [0], [4]) = 0

// probe for 1200
+0.0 > sctp: HEARTBEAT[flgs=0, HEARTBEAT_INFORMATION[len=..., val=...]];
             PAD[flgs=0, len=1120, val=...]
+0.1 < sctp: HEARTBEAT_ACK[flgs=0, HEARTBEAT_INFORMATION[len=..., val=...]]

// probe for 1500
+0.0 > sctp: HEARTBEAT[flgs=0, HEARTBEAT_INFORMATION[len=..., val=...]];
             PAD[flgs=0, len=1420, val=...]
+0.1 < sctp: HEARTBEAT_ACK[flgs=0, HEARTBEAT_INFORMATION[len=..., val=...]]

// Disable nagle to avoid delay for the second DATA chunk
+0.0 setsockopt(3, IPPROTO_SCTP, SCTP_NODELAY, [1], 4) = 0

// send bytes that result in an IP packet of 1504 byte
+0.1 write(3, ...,1456) = 1456
+0.0 > sctp: DATA[flgs=B, len=1468, tsn=1, sid=0, ssn=0, ppid=0]
+0.0 > sctp: DATA[flgs=E, len=20, tsn=2, sid=0, ssn=0, ppid=0]
+0.1 < icmp unreachable frag_needed mtu 1492 [sctp(2)]

// probe for 1200
+0.0 > sctp: HEARTBEAT[flgs=0, HEARTBEAT_INFORMATION[len=..., val=...]];
             PAD[flgs=0, len=1120, val=...]

// immediately resend chunks sent in packets bigger than the reported MTU
// this packet gets fragmented on IP level, not supported by packetdrill
+0.0 > sctp: DATA[flgs=B, len=1468, tsn=1, sid=0, ssn=0, ppid=0]

+0.0 < sctp: SACK[flgs=0, cum_tsn=0, a_rwnd=99999, gaps=[2:2], dups=[]]
+0.1 < sctp: HEARTBEAT_ACK[flgs=0, HEARTBEAT_INFORMATION[len=..., val=...]]

+0.0 < sctp: SACK[flgs=0, cum_tsn=2, a_rwnd=99999, gaps=[], dups=[]]

// probe for 1492
+0.0 > sctp: HEARTBEAT[flgs=0, HEARTBEAT_INFORMATION[len=..., val=...]];
             PAD[flgs=0, len=1412, val=...]
+0.1 < sctp: HEARTBEAT_ACK[flgs=0, HEARTBEAT_INFORMATION[len=..., val=...]]

+1.0 close(3) = 0
//Shutdown
+0.0 > sctp: SHUTDOWN[flgs=0, cum_tsn=0]
+0.0 < sctp: SHUTDOWN_ACK[flgs=0]
+0.0 > sctp: SHUTDOWN_COMPLETE[flgs=...]

